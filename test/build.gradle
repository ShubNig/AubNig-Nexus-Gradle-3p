apply plugin: 'com.android.application'

// for butterknife
//apply plugin: 'com.jakewharton.butterknife'

apply from: rootProject.file("gradle/codeQualityApp.gradle")

android {
    compileSdkVersion ANDROID_COMPILE_SDK_VERSION as int

    defaultConfig {
        applicationId "com.sinlov.aubnig.test.demo.needchange"
        minSdkVersion ANDROID_MIN_SDK_VERSION as int
        targetSdkVersion ANDROID_TARGET_SDK_VERSION as int
        versionCode VERSION_CODE as int
        versionName VERSION_NAME
        flavorDimensions "versionCode"
//        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        keyBuild {
            storeFile file(project.hasProperty('KEY_BUILD_STOREFILE') ? KEY_1_STOREFILE : '../z-keystore/debug.keystore')
            storePassword project.hasProperty('KEY_BUILD_STOREPASS') ? KEY_1_STOREPASS : 'android'
            keyAlias project.hasProperty('KEY_BUILD_KEYALIAS') ? KEY_1_KEYALIAS : 'android'
            keyPassword project.hasProperty('KEY_BUILD_KEYPASS') ? KEY_1_KEYPASS : 'android'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    testOptions.unitTests {
        all {
            jacoco {
                includeNoLocationClasses = true
                includeAndroidResources = true
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.keyBuild
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.keyBuild
        }
    }
    productFlavors {
        dev {
            buildConfigField "int", "bind_mode", '1'
        }
        prod {
            buildConfigField "int", "bind_mode", '2'
        }
    }
}

dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // test start
    // Junit
    testImplementation test_implement.junit,
            // Mockito
            test_implement.mockito_core,
            // Robolectric + Support v4
            test_implement.robolectric,
            test_implement.robolectric_shadows_support_v4,
            // if multiDexEnabled true open it
//            test_implement.robolectric_shadows_multidex,
            // EasyMock
            test_implement.easymock,
            // PowerMock
            test_implement.powermock_core,
            test_implement.powermock_module_junit4,
            // PowerMock + EasyMock extension
            test_implement.powermock_api_easymock

    //    androidTestImplementation android_test_implement.robotium_solo

    androidTestImplementation android_test_implement.com_android_support_test_runner,
            android_test_implement.com_android_support_test_espresso_core
    // test end

    implementation depends_com_android_support.appcompat_7,
            depends_com_android_support.constraint_layout

    annotationProcessor annotation_processor.butterknife_compiler
    implementation depends.butterknife
}
